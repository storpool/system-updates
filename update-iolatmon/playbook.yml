#!/usr/bin/env ansible-playbook
---
- name: Gather localhost's facts
  hosts: localhost
  gather_subset: 'min'
  tasks: []

- name: Update iolatmon on storpool nodes
  hosts: storpool
  gather_subset: 'min'
  ignore_unreachable: true
  vars_files:
    - vars/main.yml
  tasks:
    - name: Populate service facts
      service_facts:

    - name: Ensure "{{ ansible_env.HOME }}/update-iolatmon" directory exists
      file:
        path: "{{ ansible_env.HOME }}/update-iolatmon"
        state: directory
      register: ensure_dir_result
      when:
        - ansible_facts.services['storpool_iolatmon.service'] is defined
        - ansible_facts.services['storpool_iolatmon.service'].status == 'enabled'
        - ansible_env is defined
        - ansible_env.HOME is defined

    - name: Extract storpool_iolatmon archive
      unarchive:
        src: "{{ storpool_iolatmon_path }}"
        remote_src: false
        dest: "{{ ansible_env.HOME }}/update-iolatmon/"
        owner: "{{ ansible_env.USER }}"
        group: "{{ ansible_env.USER }}"
      register: extract_archive_result
      when:
        - ansible_facts.services['storpool_iolatmon.service'] is defined
        - ansible_facts.services['storpool_iolatmon.service'].status == 'enabled'
        - ensure_dir_result is succeeded
        - ansible_env is defined
        - ansible_env.HOME is defined
        - ansible_env.USER is defined

    - name: Install storpool_iolatmon
      shell: "{{ ansible_env.HOME }}/update-iolatmon/storpool_iolatmon/install.sh"
      register: install_result
      changed_when: false
      become: "{{ ansible_effective_user_id != 0 }}"
      when:
        - ansible_facts.services['storpool_iolatmon.service'] is defined
        - ansible_facts.services['storpool_iolatmon.service'].status == 'enabled'
        - extract_archive_result is succeeded
        - ansible_env is defined
        - ansible_env.HOME is defined

    - name: Run "/usr/sbin/storpool_iolatmond --volumes-report" command
      command: /usr/sbin/storpool_iolatmond --volumes-report
      changed_when: false
      register: volumes_report_result
      become: "{{ ansible_effective_user_id != 0 }}"
      when:
        - ansible_facts.services['storpool_iolatmon.service'] is defined
        - ansible_facts.services['storpool_iolatmon.service'].status == 'enabled'
        - install_result is succeeded

    - name: Show volumes report
      debug:
        var: volumes_report_result.stdout
      when:
        - ansible_facts.services['storpool_iolatmon.service'] is defined
        - ansible_facts.services['storpool_iolatmon.service'].status == 'enabled'
        - volumes_report_result is succeeded

    - name: Confirm volumes creation (if any) by script above and start of storpool_iolatmon service
      pause:
        prompt: "\nPlease, confirm\n\nPress Enter to Confirm\nor Ctrl-C,A to Refuse and Abort"
      delegate_to: localhost

    - name: Create volumes from volumes report (if any)
      shell: |
        {{ volumes_report_result.stdout }}
      changed_when: false
      register: volumes_creation_result
      become: "{{ ansible_effective_user_id != 0 }}"
      when:
        - ansible_facts.services['storpool_iolatmon.service'] is defined
        - ansible_facts.services['storpool_iolatmon.service'].status == 'enabled'
        - volumes_report_result is succeeded

    - name: Start storpool_iolatmon
      service:
        name: storpool_iolatmon
        enabled: true
        state: started
      become: "{{ ansible_effective_user_id != 0 }}"
      when:
        - ansible_facts.services['storpool_iolatmon.service'] is defined
        - ansible_facts.services['storpool_iolatmon.service'].status == 'enabled'
        - volumes_creation_result is succeeded
