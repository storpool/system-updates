#!/usr/bin/env ansible-playbook
---
- name: Gather localhost's facts
  hosts: localhost
  gather_subset: 'min'
  tasks: []

- name: Remove stale files
  hosts: storpool
  gather_subset: 'min'
  ignore_unreachable: true
  vars_files:
    - vars/main.yml
  tasks:
    - name: Check whether file "{{ sp_stale_files_inv_dir }}/<inventory_hostname>/sp_stale_files_found" exists
      stat:
        path: "{{ sp_stale_files_inv_dir }}/{{ inventory_hostname }}/sp_stale_files_found"
      register: sp_stale_files_found
      delegate_to: localhost

    - name: Show remove_sp_stale_files flag
      debug:
        var: remove_sp_stale_files
      delegate_to: localhost
      
    - name: Show stale files per node
      debug:
        var: item
      delegate_to: localhost
      loop: >
        {{ lookup('file', '{{ sp_stale_files_inv_dir }}/{{ inventory_hostname }}/sp_stale_files_found').splitlines()
        if sp_stale_files_found.stat.exists else [] }}
      when:
        - sp_stale_files_found.stat.exists

    - name: Confirm removal of stale files by the list above
      pause:
        prompt: "\nPlease, confirm the list of stale files above\n\nPress Enter to Confirm\nor Ctrl-C,A to Refuse and Abort"
      delegate_to: localhost

    - name: "{{ 'Remove stale files on node' if remove_sp_stale_files is defined and remove_sp_stale_files | bool else 'Simulate removal of stale files on node' }}"
      file:
        path: "{{ item }}"
        state: "{{ 'absent' if remove_sp_stale_files is defined and remove_sp_stale_files | bool else 'file' }}"
      ignore_errors: true
      become: "{{ ansible_effective_user_id != 0 }}"
      loop: >
        {{ lookup('file', '{{ sp_stale_files_inv_dir }}/{{ inventory_hostname }}/sp_stale_files_found').splitlines()
        if sp_stale_files_found.stat.exists else [] }} 
      when:
        - sp_stale_files_found.stat.exists
