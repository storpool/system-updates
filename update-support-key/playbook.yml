#!/usr/bin/env ansible-playbook
---
- name: Gather localhost's facts
  hosts: localhost
  gather_subset: 'min'
  roles: []
  tasks: []

- name: Update of support key on hosts
  hosts: storpool
  gather_subset: 'min'
  become: true
  vars:
    support_pub_key_path: files/support-key.pub
  tasks:
    - name: Extract support_key_with_comment
      shell: |
        grep "StorPool Support 2020 SSH key$" "{{ support_pub_key_path }}"
      register: support_key_with_comment
      changed_when: false
      delegate_to: localhost
      run_once: true

    - name: Print support_key_with_comment
      debug:
        var: support_key_with_comment.stdout
      delegate_to: localhost
      run_once: true
      when:
        - support_key_with_comment is defined
        - support_key_with_comment.rc is defined and
          support_key_with_comment.rc == 0
        - support_key_with_comment.stdout is defined

    - name: Extract support_key (algo & key only)
      shell: |
        echo "{{ support_key_with_comment.stdout }}" | cut -d ' ' -f 1,2
      register: support_key
      changed_when: false
      delegate_to: localhost
      run_once: true
      when:
        - support_key_with_comment is defined
        - support_key_with_comment.rc is defined and
          support_key_with_comment.rc == 0
        - support_key_with_comment.stdout is defined

    - name: Print support_key
      debug:
        var: support_key.stdout
      delegate_to: localhost
      run_once: true
      when:
        - support_key is defined
        - support_key.rc is defined and
          support_key.rc == 0
        - support_key.stdout is defined

    - name: Validation of support_key by search in key source
      shell: |
        grep "^{{ support_key.stdout }}" "{{ support_pub_key_path }}"
      changed_when: false
      delegate_to: localhost
      run_once: true
      when:
        - support_key is defined
        - support_key.rc is defined and
          support_key.rc == 0
        - support_key.stdout is defined

    - name: Attempt to find support_key on hosts
      shell: |
        grep "^{{ support_key.stdout }}" "{{ ansible_env.HOME }}/.ssh/authorized_keys"
      register: support_key_found
      until: support_key_found is succeeded
      retries: 5
      delay: 3
      ignore_errors: yes
      changed_when: false
      when:
        - support_key is defined
        - support_key.rc is defined and
          support_key.rc == 0
        - support_key.stdout is defined

    - name: Setup new support_key on hosts
      shell: |
        echo "{{ support_key_with_comment.stdout }}" >> "{{ ansible_env.HOME }}/.ssh/authorized_keys"
      when:
        - support_key_found is defined
        - support_key_found.rc is defined and
          support_key_found.rc == 1
        - support_key_with_comment.stdout is defined

    - name: Validation of successful setup of new support_key on hosts
      shell: |
        grep "^{{ support_key.stdout }}" "{{ ansible_env.HOME }}/.ssh/authorized_keys"
      register: support_key_validation
      until: support_key_validation is succeeded
      retries: 5
      delay: 3
      changed_when: false
      when:
        - support_key_found is defined
        - support_key_found.rc is defined and
          support_key_found.rc == 1
        - support_key_with_comment.stdout is defined
